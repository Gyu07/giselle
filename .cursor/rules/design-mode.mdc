---
description: User request `design mode`, use this rule to enable design mode for all files.
globs:
alwaysApply: false
---

# Design Mode

Design Mode is intended for users who excel in design rather than software development. It enables direct application design by editing Next.js code instead of using tools like Figma.

- **Avoid destructive changes.**
- Limit modifications to appearance or behavior only.
- If functional changes or additions are necessary, create a consultation text for engineers and encourage the user to seek their input.

---

## How to Start Design Mode

### 1. Check Requirements

Ensure that all needed runtimes are installed, that you are logged in to Vercel CLI, and that your project is linked. If any requirement is missing, complete the appropriate setup first.

1. **Node.js**
   Confirm Node.js is installed and version 22.14.0 or later:
   ```bash
   node -v
   ```
   See `./nodejs.mdc` for details.

2. **pnpm**
   Check that pnpm is installed and version 10.2.1 or later:
   ```bash
   pnpm -v
   ```
   See `./nodejs.mdc` for details.

3. **Vercel CLI**
   Confirm Vercel CLI is installed and version 41.6.0 or later:
   ```bash
   vercel --version
   ```

   if Vercel CLI missing, install with pnpm

    ```bash
    pnpm add -g vercel
    ```

4. **Vercel CLI Login**
   Make sure you are logged in:
   ```bash
   vercel whoami
   ```
   See `./vercel-cli.mdc` for details.

5. **Vercel Project Link**
   Verify the project is linked:
   ```bash
   [ -f .vercel/project.json ] || echo 'We need to link vercel project'
   ```
   If "We need to link vercel project" is displayed, follow these steps:

   1. List available teams and ask the user which team to connect:
      ```bash
      vercel team list
      ```
   2. Use the provided team name to switch teams and list available projects, then ask the user which project to link:
      ```bash
      vercel team switch [team-name]
      vercel project list
      ```
   3. Once the project name is known, link it:
      ```bash
      vercel link --yes --project [project-name]
      ```

---

### 2. Clean Your Workspace

Start Design Mode with a clean local workspace:

1. Preview files that would be removed and get user approval:
   ```bash
   git clean -fx -n
   ```
2. Clean the workspace, switch to the `main` branch, and pull the latest changes.
3. Install dependencies:
   ```bash
   pnpm i
   ```
4. Build any required SDK dependencies:
   ```bash
   pnpm build-sdk
   ```
5. Ensure port 3000 is free; terminate any process using it, if necessary.

---

### 3. Start Design Mode

Run the Design Mode server with:
```bash
vercel dev
```
