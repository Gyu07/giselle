import { CopyIcon } from "lucide-react";
import {
	Dialog,
	DialogContent,
	DialogTrigger,
} from "../../../components/dialog";
import { DocumentIcon } from "../../../components/icons/document";
import { SpinnerIcon } from "../../../components/icons/spinner";
import type { GiselleNode } from "../../types";
import { Block } from "./block";
import { MarkdownRender } from "./markdown-render";

type ArtifactBlockProps = {
	title?: string;
	content?: string;
	completed?: boolean;
	node: Pick<GiselleNode, "archetype" | "name">;
};
export function ArtifactBlock(props: ArtifactBlockProps) {
	const title = props.title ?? "Generating...";
	const content = props.content ?? "";
	const completed = props.completed ?? false;
	return (
		<Dialog>
			<DialogTrigger>
				<Block
					title={title}
					icon={
						completed ? (
							<DocumentIcon className="w-[18px] h-[18px] fill-black-30" />
						) : (
							<SpinnerIcon className="w-[18px] h-[18px] stroke-black-30 animate-follow-through-spin fill-transparent" />
						)
					}
					description={`${props.node.archetype} / ${props.node.name}`}
				/>
			</DialogTrigger>
			<DialogContent>
				<div className="flex flex-col h-full overflow-hidden z-10">
					<div
						className="px-[32px] py-[16px] font-rosart text-[22px] text-black--30 drop-shadow-[0px_0px_20px_0px_hsla(207,_100%,_48%,_1)]"
						style={{
							textShadow: "0px 0px 20px hsla(207, 100%, 48%, 1)",
						}}
					>
						{title}
					</div>
					<div className="border-t border-black-40" />
					<div className="overflow-x-hidden overflow-y-auto flex-1">
						<div className="px-[32px] py-[16px] font-rosart text-[18px] text-black-30">
							<MarkdownRender markdownLike={content} />
						</div>
					</div>
					<div className="px-[32px] flex items-center py-[12px] justify-between">
						<p className="text-[14px] font-bold text-black-70">
							Generated by {props.node.archetype}
						</p>
						<div className="flex items-center gap-[10px] fill-black-30">
							<button
								type="button"
								onClick={() => {
									navigator.clipboard.writeText(content);
								}}
							>
								<CopyIcon size={20} />
							</button>
						</div>
					</div>
				</div>
			</DialogContent>
		</Dialog>
	);
}
